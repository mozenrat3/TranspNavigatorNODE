{
  "swagger": "2.0",
  "info": {
    "title": "My API",
    "description": "My All API",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
    }
}, 
  "paths": {
    "/user/signup": {
      "post": {
        "description": "Create user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "login": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "login": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "description": "Get user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "object",
            "description": "Existing user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "description": "Change user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "object",
            "description": "Existing change user ID"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "login": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "description": "Delete user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "object",
            "description": "Existing delete user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/user/": {
      "get": {
        "description": "Get all users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/reviews/{id}": {
      "get": {
        "description": "Get review by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "object",
            "description": "Existing review ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "Change review",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "object",
            "description": "Existing change review ID"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "example": "any"
                },
                "route_id": {
                  "example": "any"
                },
                "comment": {
                  "example": "any"
                },
                "rate": {
                  "example": "any"
                },
                "dates": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "description": "Delete review",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "object",
            "description": "Existing delete review ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/reviews/": {
      "get": {
        "description": "Get all reviews",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "Create review",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "example": "any"
                },
                "route_id": {
                  "example": "any"
                },
                "comment": {
                  "example": "any"
                },
                "rate": {
                  "example": "any"
                },
                "dates": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/stops/{id}": {
      "get": {
        "description": "Get stop by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "object",
            "description": "Existing stop ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "Change stop",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "object",
            "description": "Existing change stop ID"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "coords": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "description": "Delete stop",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "object",
            "description": "Existing delete stop ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/stops/": {
      "get": {
        "description": "Get all stops",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "Create stop",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "coords": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/transports/{id}": {
      "get": {
        "description": "Get transport by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "object",
            "description": "Existing transport ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "Change transport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "object",
            "description": "Existing change transport ID"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "description": "Delete transport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "object",
            "description": "Existing delete transport ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/transports/": {
      "get": {
        "description": "Get all transports",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "Create transport",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/routes/{id}": {
      "get": {
        "description": "Get route by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "object",
            "description": "Existing route ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "Change route",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "object",
            "description": "Existing change route ID"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "number": {
                  "example": "any"
                },
                "length": {
                  "example": "any"
                },
                "stop_start": {
                  "example": "any"
                },
                "stop_end": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "description": "Delete route",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "object",
            "description": "Existing delete route ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/routes/": {
      "get": {
        "description": "Get all routes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "Create route",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "number": {
                  "example": "any"
                },
                "length": {
                  "example": "any"
                },
                "stop_start": {
                  "example": "any"
                },
                "stop_end": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/timetables/{id}": {
      "get": {
        "description": "Get timetable by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "object",
            "description": "Existing timetable ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "Change timetable",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "object",
            "description": "Existing change timetable ID"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "route_id": {
                  "example": "any"
                },
                "weekdays": {
                  "example": "any"
                },
                "arrival_time": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "description": "Delete timetable",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "object",
            "description": "Existing delete timetable ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/timetables/": {
      "get": {
        "description": "Get all timetables",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "Create timetable",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "route_id": {
                  "example": "any"
                },
                "weekdays": {
                  "example": "any"
                },
                "arrival_time": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {
    "user": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string",
          "example": "test"
        },
        "password": {
          "type": "string",
          "example": "test"
        },
        "email": {
          "type": "string",
          "example": "test@mail.net"
        },
        "passwordConfirm": {
          "type": "string",
          "example": "testpassword"
        }
      }
    },
    "users": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/user"
      }
    },
    "review": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "number",
          "example": 3
        },
        "route_id": {
          "type": "number",
          "example": 1
        },
        "comment": {
          "type": "string",
          "example": "testcom1"
        },
        "rate": {
          "type": "number",
          "example": 3
        },
        "dates": {
          "type": "string",
          "example": "2011-01-01 12:00:00"
        }
      }
    },
    "reviews": {
      "type": "array",
      "items": {
        "type": "array",
        "items": {}
      }
    },
    "route": {
      "type": "object",
      "properties": {
        "number": {
          "type": "number",
          "example": 120
        },
        "length": {
          "type": "number",
          "example": 11
        },
        "stop_start": {
          "type": "number",
          "example": 1
        },
        "stop_end": {
          "type": "number",
          "example": 5
        }
      }
    },
    "routes": {
      "type": "array",
      "items": {
        "type": "array",
        "items": {}
      }
    },
    "stop": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "testname1"
        },
        "coords": {
          "type": "string",
          "example": "testcoords1"
        }
      }
    },
    "stops": {
      "type": "array",
      "items": {
        "type": "array",
        "items": {}
      }
    },
    "transport": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "testtram1"
        }
      }
    },
    "transports": {
      "type": "array",
      "items": {
        "type": "array",
        "items": {}
      }
    },
    "timetable": {
      "type": "object",
      "properties": {
        "route_id": {
          "type": "number",
          "example": 1
        },
        "weekdays": {
          "type": "number",
          "example": 3
        },
        "arrival_time": {
          "type": "string",
          "example": "2011-01-01 12:00:00"
        }
      }
    },
    "timetables": {
      "type": "array",
      "items": {
        "type": "array",
        "items": {}
      }
    }
  }
}